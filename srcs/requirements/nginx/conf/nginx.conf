worker_processes  1;                        #生成するプロセスの数、利用可能なCPUコア数に依存

events {
    worker_connections 1024;                #1プロセスごとに処理する接続数
}

http {
    include       mime.types;               #include: 別の設定ファイルを読み込む | mime.types: 拡張子とMIMEタイプのセット(key-value)が定義されており、正しいMIMEタイプをレスポンスのContent-Typeヘッダに設定する
    default_type  application/octet-stream; #defaultのMIMEタイプを設定 | application/octet-stream: バイナリ、未知のファイルタイプを表す汎用的なMIMEタイプ

    access_log  /var/log/nginx/access.log;  #logの場所を指定
    error_log   /var/log/nginx/error.log;   #logの場所を指定

    sendfile        on;                     #sendfileシステムコールを有効にする | 直接ソケットに転送できるため、効率的にファイルを転送できる | ソケット: ネットワークを介したプロセス間通信のエンドポイント
    keepalive_timeout  65;                  #keepalive接続のタイムアウトを設定 | keepalive接続: 1つのTCPコネクションで複数のHTTPリクエストを処理する仕組み

    server {
        listen       443 ssl;               #port443でssl通信を待ち受ける
        server_name  localhost;             #server名を指定

        #sslの設定(crt:自己署名証明書(公開鍵を含む), key:秘密鍵）
        ssl_certificate     /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;
        ssl_protocols TLSv1.2 TLSv1.3;
        
        #暗号スイートの指定
        ssl_ciphers 'TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384';
        #より安全な暗号スイートの優先をonに
        ssl_prefer_server_ciphers on;

        location / {                        #`/`へのリクエストに対して
            root   /usr/share/nginx/html;   #ドキュメントルートを指定 | ドキュメントルート: 静的ファイルのディレクトリ
            index  index.html index.htm;    #応答するファイルのリスト
        }
    }
}
